/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
def build_versions = [:]
build_versions.min_sdk = 24
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

ext.deps = [:]

def versions = [:]
versions.android_gradle_plugin = '3.4.1'

versions.junit = "4.12"
versions.espresso = "3.1.1"

versions.support = "1.1.0-beta02"
versions.constraint_layout = "2.0.0-beta1"
versions.fragment = "1.1.0-alpha09"

versions.kotlin = "1.3.31"
versions.kotlinx = "1.2.1"

versions.core_ktx = "1.0.0"
versions.arch_core = "2.0.1"
versions.lifecycle = "2.0.0"
versions.navigation = "2.1.0-alpha04"
versions.room = "2.1.0-alpha06"

versions.retrofit = "2.3.0"
versions.okhttp_logging_interceptor = "3.9.0"

versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"

versions.glide = "4.9.0"
versions.gson = "2.8.5"

ext.versions = versions

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.kotlin_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.navigation_safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"

deps.junit = "junit:junit:$versions.junit"

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def ktx = [:]
ktx.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
ktx.coroutines_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinx"
ktx.coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinx"
deps.ktx = ktx

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.recyclerview = "androidx.recyclerview:recyclerview:1.1.0-alpha06"
deps.material = "com.google.android.material:material:1.1.0-alpha06"

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.constraint_layout = deps.constraint_layout
support.recyclerview = deps.recyclerview
support.material = deps.material
deps.support = support

def fragment = [:]
fragment.runtime = "androidx.fragment:fragment:${versions.fragment}"
fragment.runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
fragment.testing = "androidx.fragment:fragment-testing:${versions.fragment}"
deps.fragment = fragment

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
deps.lifecycle = lifecycle
deps.lifecycle_compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
deps.navigation = navigation
ext.deps = deps

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room
deps.room_compiler = "androidx.room:room-compiler:$versions.room"

deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.scalars = "com.squareup.retrofit2:converter-scalars:$versions.retrofit"
retrofit.rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.coroutine = 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.logging = deps.okhttp_logging_interceptor
deps.retrofit = retrofit

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
deps.glide = glide
deps.glide_compiler = "com.github.bumptech.glide:compiler:$versions.glide"

deps.photo_view = "com.github.chrisbanes:PhotoView:2.0.0"

def player = [:]
player.core = 'com.google.android.exoplayer:exoplayer-core:2.7.3'
player.dash = 'com.google.android.exoplayer:exoplayer-dash:2.7.3'
player.ui = 'com.google.android.exoplayer:exoplayer-ui:2.7.3'
deps.player = player

deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"

deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.logger = 'com.orhanobut:logger:2.2.0'

ext.deps = deps

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenLocal()
    //handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url "https://jitpack.io" }
}

ext.addRepos = this.&addRepos
